name: release

on:
  push:
    tags:
      - v*.*.*
    branches-ignore:
      - '**'

env:
  IMAGE_NAME: traq-ui

jobs:
  make-dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.7.0
      - run: npm ci
      - run: npm run build:with-font
        env:
          NODE_ENV: production
      - name: Archive dist/
        run: tar -zcvf ./dist.tar.gz ./dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload dist.tar.gz
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.tar.gz
          asset_name: dist.tar.gz
          asset_content_type: application/x-gzip
  image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Set IMAGE_TAG env
        run: echo ::set-env name=IMAGE_TAG::$(echo ${GITHUB_REF:11})
      - uses: actions/checkout@v2
      - name: Login GitHub Registry
        run: docker login docker.pkg.github.com -u traPtitech -p ${{ secrets.GH_TOKEN }}
      - name: Build Image
        run: docker build -t docker.pkg.github.com/traptitech/traq_s-ui/${IMAGE_NAME}:${IMAGE_TAG} .
      - name: Push image to GitHub Registry
        run: docker push docker.pkg.github.com/traptitech/traq_s-ui/${IMAGE_NAME}:${IMAGE_TAG}
      - name: Push image to GitHub Registry (latest)
        run: |
          docker tag docker.pkg.github.com/traptitech/traq_s-ui/${IMAGE_NAME}:$IMAGE_TAG docker.pkg.github.com/traptitech/traq_s-ui/${IMAGE_NAME}:latest
          docker push docker.pkg.github.com/traptitech/traq_s-ui/${IMAGE_NAME}:latest
